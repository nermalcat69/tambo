name: Template Maintenance

on:
  workflow_run:
    workflows: ["Release Please"]
    types:
      - completed
    branches:
      - main

# Prevent multiple simultaneous runs
concurrency:
  group: template-maintenance-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  detect-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      should-upgrade: ${{ steps.check-release.outputs.should-upgrade }}
      release-tag: ${{ steps.check-release.outputs.release-tag }}
      release-type: ${{ steps.check-release.outputs.release-type }}
      release-url: ${{ steps.check-release.outputs.release-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.TAMBO_UPGRADE_PAT || secrets.GITHUB_TOKEN }}

      # Script is now executable in the repository

      - name: Check for relevant release
        id: check-release
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: .github/scripts/detect-release.sh

  upgrade-templates:
    needs: detect-release
    runs-on: ubuntu-latest
    if: ${{ needs.detect-release.outputs.should-upgrade == 'true' }}
    strategy:
      matrix:
        template-repo: ['tambo-ai/tambo-template']
      fail-fast: false
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Verify GitHub CLI
        run: |
          gh --version
          echo "GitHub CLI is available"

      - name: Install Tambo CLI
        run: npm install -g tambo@latest

      - name: Clone template repository
        env:
          GITHUB_TOKEN: ${{ secrets.TAMBO_UPGRADE_PAT || secrets.GITHUB_TOKEN }}
        run: |
          git clone https://x-access-token:$GITHUB_TOKEN@github.com/${{ matrix.template-repo }}.git template-repo
          cd template-repo
          git config user.name "Tambo Bot"
          git config user.email "bot@tambo.ai"

      - name: Create upgrade branch
        working-directory: template-repo
        run: |
          BRANCH_NAME="tambo-upgrade-${{ needs.detect-release.outputs.release-tag }}"
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Capture pre-upgrade state
        working-directory: template-repo
        run: ../../.github/scripts/capture-pre-upgrade.sh

      - name: Run Tambo upgrade
        working-directory: template-repo
        run: |
          echo "Running tambo upgrade..."
          npx tambo@latest upgrade --accept-all --silent || {
            echo "Upgrade failed, capturing logs..."
            echo "UPGRADE_FAILED=true" >> $GITHUB_ENV
            exit 1
          }

      - name: Capture post-upgrade state and generate diff
        working-directory: template-repo
        env:
          RELEASE_TAG: ${{ needs.detect-release.outputs.release-tag }}
          RELEASE_URL: ${{ needs.detect-release.outputs.release-url }}
        run: ../../.github/scripts/capture-post-upgrade.sh

      - name: Create Pull Request
        if: env.NO_CHANGES != 'true' && env.UPGRADE_FAILED != 'true'
        working-directory: template-repo
        env:
          GITHUB_TOKEN: ${{ secrets.TAMBO_UPGRADE_PAT || secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ needs.detect-release.outputs.release-tag }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          TEMPLATE_REPO: ${{ matrix.template-repo }}
        run: ../../.github/scripts/create-pr.sh

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: upgrade-logs-${{ matrix.template-repo }}-${{ needs.detect-release.outputs.release-tag }}
          path: |
            template-repo/upgrade-summary.md
            template-repo/package.json.before
            template-repo/package.json
          retention-days: 30

      - name: Log results
        run: |
          if [ "$NO_CHANGES" = "true" ]; then
            echo "✅ No changes needed for ${{ matrix.template-repo }}"
          elif [ "$UPGRADE_FAILED" = "true" ]; then
            echo "❌ Upgrade failed for ${{ matrix.template-repo }}"
          else
            echo "✅ Successfully created upgrade PR for ${{ matrix.template-repo }}"
          fi

  summary:
    needs: [detect-release, upgrade-templates]
    runs-on: ubuntu-latest
    if: always() && needs.detect-release.outputs.should-upgrade == 'true'
    steps:
      - name: Summary
        run: |
          echo "## Template Maintenance Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release:** ${{ needs.detect-release.outputs.release-tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Type:** ${{ needs.detect-release.outputs.release-type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ needs.upgrade-templates.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.upgrade-templates.result }}" = "success" ]; then
            echo "✅ Template maintenance completed successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some template upgrades failed. Check logs for details." >> $GITHUB_STEP_SUMMARY
          fi